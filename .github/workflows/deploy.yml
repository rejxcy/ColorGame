name: Deploy to EC2

on:
  push:
    branches: [ master ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build Docker images
      run: |
        docker compose build
        docker save $(docker images -q) -o images.tar
        
    - name: Configure SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.AWS_SSH_KEY }}" > ~/.ssh/private.key
        chmod 600 ~/.ssh/private.key
        ssh-keyscan -H ${{ secrets.AWS_HOST }} >> ~/.ssh/known_hosts
        
        cat > ~/.ssh/config << EOF
        Host ec2
          HostName ${{ secrets.AWS_HOST }}
          User ${{ secrets.AWS_USERNAME }}
          IdentityFile ~/.ssh/private.key
          StrictHostKeyChecking no
          UserKnownHostsFile ~/.ssh/known_hosts
        EOF
        
        chmod 600 ~/.ssh/config
        chmod 600 ~/.ssh/known_hosts
        
    - name: Prepare deployment files
      run: |
        mkdir -p deploy
        cp docker-compose.yml deploy/
        cp -r frontend/nginx deploy/
        tar czf deploy.tar.gz deploy/
        
    - name: Copy files to EC2
      run: |
        echo "Copying files to EC2..."
        scp -i ~/.ssh/private.key images.tar deploy.tar.gz ec2:~/colorgame/
        
    - name: Deploy to EC2
      run: |
        echo "Starting deployment..."
        ssh ec2 '
          cd ~/colorgame &&
          tar xzf deploy.tar.gz &&
          mv deploy/* . &&
          rm -rf deploy deploy.tar.gz &&
          docker load < images.tar &&
          # 確保停止並移除所有相關容器
          docker compose down --remove-orphans || true &&
          # 清理未使用的映像
          docker system prune -f &&
          # 啟動新容器
          docker compose up -d &&
          rm images.tar
        ' 